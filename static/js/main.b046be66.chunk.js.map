{"version":3,"sources":["components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["operatorIndex","math","create","all","NUMS","OPERATORS","Calculator","props","state","display","handleClick","bind","clearDisplay","showDisplay","handleOutput","checkDoubleDot","checkOperators","checkOperatorIndex","checkTwoDecimals","checkFirstChar","e","target","value","this","setState","charAt","includes","addState","length","prevDisplay","slice","evaluate","toString","displayLength","currentDisplay","isEOperator","displayWithoutLastChar","sliceDisplay","console","log","className","id","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b046be66.chunk.js","sourcesContent":["import '../styles/Calculator.css'\nimport React from 'react';\nimport { create, all } from 'mathjs'\n\nconst config = {}\nconst math = create(all, config)\n\nconst NUMS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '/', '*', '-', '+', '.'];\nconst OPERATORS = ['/', '*', '+'];\nlet operatorIndex;\n\nexport default class Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            display: '0'\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.clearDisplay = this.clearDisplay.bind(this);\n        this.showDisplay = this.showDisplay.bind(this);\n        this.handleOutput = this.handleOutput.bind(this);\n        this.checkDoubleDot = this.checkDoubleDot.bind(this);\n        this.checkOperators = this.checkOperators.bind(this);\n        this.checkOperatorIndex = this.checkOperatorIndex.bind(this);\n        this.checkTwoDecimals = this.checkTwoDecimals.bind(this);\n        this.checkFirstChar = this.checkFirstChar.bind(this);\n\n    }\n\n    clearDisplay(e) {\n        if (e.target.value === 'CLEAR' || this.state.display === '0') {\n            this.setState({\n                display: '0',\n            });\n        }\n    };\n\n    showDisplay(e) {\n        if (this.state.display.charAt(0) === '0' && e.target.value !== 'CLEAR') {\n            this.setState({\n                display: e.target.value\n            });\n        } else if (NUMS.includes(e.target.value)) {\n            let addState = this.state.display + e.target.value;\n            this.setState({\n                display: addState\n            });\n        }\n    };\n\n    handleOutput(e) {\n        if (e.target.value === '=' &&\n            !OPERATORS.includes(this.state.display.charAt(this.state.display.length - 1)) &&\n            this.state.display.charAt(this.state.display.length - 1) !== '-') {\n            this.setState({\n                display: math.evaluate(this.state.display).toString()\n            });\n            operatorIndex = 0;\n        }\n        else if (e.target.value === '=') {\n            let prevDisplay = this.state.display.slice(0, -1);\n            this.setState({\n                display: prevDisplay\n            });\n        }\n    };\n\n    checkDoubleDot(e) {\n        let displayLength = this.state.display.length;\n        let currentDisplay = this.state.display;\n        if (e.target.value === '.' && this.state.display.charAt(displayLength - 1) === '.') {\n            this.setState({\n                display: currentDisplay\n            });\n        }\n    }\n\n    checkTwoDecimals(e) {\n        // CHECK DISPLAY LENGTH [ MINIMUM MUST BE 2 TO CONTAINT MINIMAL WRONG EXPRESSION EX. 5.5.]\n        // CHECK IF e IS .\n        if (this.state.display.length >= 2 && e.target.value === '.') {\n            let indexDisplay = this.state.display.slice(operatorIndex, this.state.display.length);\n            if (indexDisplay.includes('.')) {\n                let currentDisplay = this.state.display;\n                this.setState({\n                    display: currentDisplay\n                });\n            }\n        }\n    }\n\n    checkOperators(e) {\n        let displayLength = this.state.display.length;\n        let currentDisplay = this.state.display;\n        let isEOperator = OPERATORS.includes(e.target.value);\n        //CHECK IF ENTERED CHAR IS OPERATOR AND LAST CHAR IN DISPLAY IS EQUAL TO ENTERED CHAR\n        if (OPERATORS.includes(e.target.value) && this.state.display.charAt(displayLength - 1) === e.target.value) {\n            this.setState({\n                display: currentDisplay\n            });\n        }//\"5 * - + 5\" = should produce an output of \"10\"\n        else if (\n            (// CHECK IF ENTERED CHAR IS OPERATOR\n                isEOperator &&\n                // CHECK IF LAST CHAR IN DISPLAY IS OPERATOR\n                OPERATORS.includes(this.state.display.charAt(displayLength - 1))) ||\n            // OR CHECK IF ENTERED CHAR IS OPERATOR AND LAST CHAR OF DISPLAY IS MINUS\n            (isEOperator && this.state.display.charAt(displayLength - 1) === '-')\n\n        ) {\n            // CREATE DISPLAY WITHOUT LAST CHAR\n            let displayWithoutLastChar = this.state.display.slice(0, -1);\n            // ADD CURRENT CHAR TO DISPLAY WITHOUT LAST CHAR\n            this.setState({\n                display: displayWithoutLastChar + e.target.value\n            });\n        };\n        // IF DISPLAY HAS MIN 3 CHARS\n        if (displayLength >= 2) {\n            // IF ENTERED CHAR IS OPERATOR AND LAST CHAR IS MINUS\n            if (isEOperator && this.state.display.charAt(displayLength - 1) === '-' &&\n                // AND IF SECOND LAST CHAR IS OPERATOR\n                OPERATORS.includes(this.state.display.charAt(displayLength - 2))) {\n                //CREATE NEW DISPLAY WITHOUT TWO LAST CHARS\n                let sliceDisplay = this.state.display.slice(0, -2);\n                this.setState({\n                    display: sliceDisplay + e.target.value\n                })\n            }\n        }\n    }\n\n    checkOperatorIndex() {\n        if (OPERATORS.includes(this.state.display.charAt(this.state.display.length - 1)) || '-'.includes(this.state.display.charAt(this.state.display.length - 1))) {\n            operatorIndex = this.state.display.length - 1;\n            console.log(operatorIndex);\n        }\n    }\n\n    checkFirstChar(e) {\n        if (OPERATORS.includes(e.target.value) && this.state.display.charAt(0) === '0') {\n            let prevDisplay = this.state.display;\n            this.setState({\n                display: prevDisplay\n            });\n        }\n    }\n\n    handleClick(e) {\n        this.checkOperatorIndex();\n\n        this.clearDisplay(e);\n        this.showDisplay(e);    // WROC DO HANDLEOUTPUT KURWIU KEKW\n        this.handleOutput(e);\n        this.checkDoubleDot(e);\n        this.checkOperators(e);\n        this.checkTwoDecimals(e);\n        this.checkFirstChar(e);\n    }\n\n    render() {\n\n        return (\n            <div className='calculator' >\n                <div id='display'>\n                    <p className='display-text'>{this.state.display}</p>\n                </div>\n                <div id='pad'>\n                    <div id='first-row' className='row'>\n                        <button id='clear' className='standard-button clr-button' onClick={this.handleClick} value='CLEAR'>CL</button>\n                        <button id='divide' className='standard-button op-button' onClick={this.handleClick} value='/'>/</button>\n                        <button id='multiply' className='standard-button op-button' onClick={this.handleClick} value='*'>*</button>\n                        <button id='subtract' className='standard-button op-button' onClick={this.handleClick} value='-'>-</button>\n                    </div>\n                    <div className='row'>\n                        <button id='seven' className='standard-button number-pad' onClick={this.handleClick} value='7'>7</button>\n                        <button id='eight' className='standard-button number-pad' onClick={this.handleClick} value='8'>8</button>\n                        <button id='nine' className='standard-button number-pad' onClick={this.handleClick} value='9'>9</button>\n                        <button id='add' className='high-button op-button' onClick={this.handleClick} value='+'>+</button>\n                        <button id='four' className='standard-button number-pad' onClick={this.handleClick} value='4'>4</button>\n                        <button id='five' className='standard-button number-pad' onClick={this.handleClick} value='5'>5</button>\n                        <button id='six' className='standard-button number-pad' onClick={this.handleClick} value='6'>6</button>\n                    </div>\n                    <div className='row'>\n                        <button id='one' className='standard-button number-pad' onClick={this.handleClick} value='1'>1</button>\n                        <button id='two' className='standard-button number-pad' onClick={this.handleClick} value='2'> 2</button>\n                        <button id='three' className='standard-button number-pad' onClick={this.handleClick} value='3'>3</button>\n                        <button id='equals' className='high-button' onClick={this.handleClick} value='='>=</button>\n                        <button id='zero' className='number-pad' onClick={this.handleClick} value='0'>0</button>\n                        <button id='decimal' className='standard-button' onClick={this.handleClick} value='.'>.</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import './App.css';\nimport Calculator from './components/Calculator.js';\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}